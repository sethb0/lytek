oneOf:
  - type: object
    properties:
      _id:
        bsonType: objectId
      action:
        type: string
        minLength: 1
      always foreign:
        type: boolean
        enum: [true]
      any akuma:
        type: boolean
        enum: [true]
      cost:
        type: string
        minLength: 1
      description:
        type: string
      duration:
        type: string
        minLength: 1
      edge cost:
        bsonType: int
        minimum: 1
      edges:
        type: object
        additionalProperties:
          type: string
          minLength: 1
        minProperties: 1
      errata:
        type: boolean
        enum: [true]
      exalt:
        type: string
        minLength: 1
      excellency:
        type: boolean
        enum: [true]
      group:
        type: string
        minLength: 1
      house-ruled:
        type: boolean
        enum: [true]
      gather:
        type: string
        minLength: 1
      id:
        type: string
        pattern: '^[^\s.]+(\.[^\s.]+)?$'
      keywords:
        type: object
        additionalProperties:
          oneOf:
            - bsonType: int
              minimum: 0
            - type: boolean
              enum: [true]
      lotus root:
        type: boolean
        enum: [true]
      martial:
        type: object
        properties:
          Archery:
            type: boolean
            enum: [true]
          Martial Arts:
            type: boolean
            enum: [true]
          Melee:
            type: boolean
            enum: [true]
          Thrown:
            type: boolean
            enum: [true]
        additionalProperties: false
        minProperties: 1
      martial-ready:
        type: boolean
        enum: [true]
      merge:
        type: string
        minLength: 1
      mutually exclusive:
        type: boolean
        enum: [true]
      name:
        type: string
        minLength: 1
      peripheral expansion:
        bsonType: int
        minimum: 1
      prerequisites:
        type: object
        properties:
          charms:
            type: array
            items:
              oneOf:
                - type: object
                  properties:
                    count:
                      bsonType: int
                      minimum: 2
                    id:
                      type: string
                      pattern: '^[^\s.]+(\.[^\s.]+)?$'
                    variant:
                      type: string
                      pattern: '^[^\s.]+(\.[^\s.]+)?$'
                  additionalProperties: false
                  required: ['id']
                - type: string
                  pattern: '^[^\s.]+(\.[^\s.]+)?$'
            uniqueItems: true
          essence:
            bsonType: int
            minimum: 1
          excellencies:
            bsonType: int
            minimum: 1
          groups:
            type: array
            items:
              type: object
              properties:
                threshold:
                  bsonType: int
                  minimum: 1
                charms:
                  type: array
                  items:
                    oneOf:
                      - type: object
                        properties:
                          count:
                            bsonType: int
                            minimum: 2
                          id:
                            type: string
                            pattern: '^[^\s.]+(\.[^\s.]+)?$'
                          variant:
                            type: string
                            pattern: '^[^\s.]+(\.[^\s.]+)?$'
                        additionalProperties: false
                        required: ['id']
                      - type: string
                        pattern: '^[^\s.]+(\.[^\s.]+)?$'
                  uniqueItems: true
                  minItems: 2
              required: ['threshold', 'charms']
          other excellencies:
            type: array
            items:
              type: object
              properties:
                threshold:
                  bsonType: int
                  minimum: 1
                variant:
                  type: string
                  pattern: '^[^\s.]+(\.[^\s.]+)?$'
              required: ['threshold', 'variant']
          traits:
            type: object
            additionalProperties:
              bsonType: int
              minimum: 1
        required: ['essence']
      raises Essence cap:
        type: boolean
        enum: [true]
      raises trait cap:
        type: boolean
        enum: [true]
      repurchases:
        type: object
        oneOf:
          - properties:
              limit:
                oneOf:
                  - bsonType: int
                    minimum: 1
                  - type: string
                    minLength: 1
                  - type: array
                    items:
                      type: string
                      minLength: 1
                    minItems: 1
              modifier:
                allOf:
                  - bsonType: int
                  - not:
                      enum: [0]
              required:
                type: boolean
                enum: [true]
            required: ['limit']
          - properties:
              when:
                type: array
                items:
                  type: object
                  additionalProperties:
                    bsonType: int
                    minimum: 1
                  minProperties: 1
                minItems: 1
            required: ['when']
      source:
        type: string
        minLength: 1
      taint:
        type: object
        additionalProperties:
          bsonType: int
          minimum: 0
        minProperties: 1
      transcends caps:
        type: boolean
        enum: [true]
      treat as:
        type: string
        enum: ['Celestial Martial Arts', 'Terrestrial Martial Arts', 'Sidereal Martial Arts']
      type:
        type: string
        enum: ['charm', 'generic', 'knack']
      variants:
        type: array
        items:
          type: object
          properties:
            description:
              type: string
            errata:
              type: boolean
              enum: [true]
            house-ruled:
              type: boolean
              enum: [true]
            id:
              type: string
              pattern: '^[^\s.]+(\.[^\s.]+)?$'
            name:
              type: string
              minLength: 1
            prerequisites:
              type: object
              properties:
                charms:
                  type: array
                  items:
                    oneOf:
                      - type: object
                        properties:
                          count:
                            bsonType: int
                            minimum: 2
                          id:
                            type: string
                            pattern: '^[^\s.]+(\.[^\s.]+)?$'
                          variant:
                            type: string
                            pattern: '^[^\s.]+(\.[^\s.]+)?$'
                        additionalProperties: false
                        required: ['id']
                      - type: string
                        pattern: '^[^\s.]+(\.[^\s.]+)?$'
                  uniqueItems: true
                cost:
                  type: string
                  minLength: 1
                essence:
                  bsonType: int
                  minimum: 1
                excellencies:
                  bsonType: int
                  minimum: 1
                groups:
                  type: array
                  items:
                    type: object
                    properties:
                      threshold:
                        bsonType: int
                        minimum: 1
                      charms:
                        type: array
                        items:
                          oneOf:
                            - type: object
                              properties:
                                count:
                                  bsonType: int
                                  minimum: 2
                                id:
                                  type: string
                                  pattern: '^[^\s.]+(\.[^\s.]+)?$'
                                variant:
                                  type: string
                                  pattern: '^[^\s.]+(\.[^\s.]+)?$'
                              additionalProperties: false
                              required: ['id']
                            - type: string
                              pattern: '^[^\s.]+(\.[^\s.]+)?$'
                        uniqueItems: true
                        minItems: 2
                    required: ['charms', 'threshold']
                other excellencies:
                  type: array
                  items:
                    type: object
                    properties:
                      threshold:
                        bsonType: int
                        minimum: 1
                      variant:
                        type: string
                        pattern: '^[^\s.]+(\.[^\s.]+)?$'
                    required: ['threshold', 'variant']
                traits:
                  type: object
                  additionalProperties:
                    bsonType: int
                    minimum: 1
            source:
              type: string
              minLength: 1
          required: ['id', 'name']
          additionalProperties: false
        minItems: 1
      virtue:
        type: object
        properties:
          Compassion:
            type: boolean
            enum: [true]
          Conviction:
            type: boolean
            enum: [true]
          Temperance:
            type: boolean
            enum: [true]
          Valor:
            type: boolean
            enum: [true]
        additionalProperties: false
        minProperties: 1
    required: ['id', 'type']
    additionalProperties: false
  - type: object
    properties:
      _id:
        bsonType: objectId
      for:
        type: object
        properties:
          exalt:
            type: string
            minLength: 1
          group:
            type: string
            minLength: 1
        additionalProperties: false
        required: ['exalt']
      id:
        type: string
        pattern: '^[^\s.]+(\.[^\s.]+)?$'
      name:
        type: string
        minLength: 1
      type:
        type: string
        enum: ['proxy']
      variants:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              pattern: '^[^\s.]+(\.[^\s.]+)?$'
            name:
              type: string
              minLength: 1
          additionalProperties: false
          required: ['id', 'name']
        minItems: 1
        maxItems: 1
    additionalProperties: false
    required: ['for', 'id', 'type']
